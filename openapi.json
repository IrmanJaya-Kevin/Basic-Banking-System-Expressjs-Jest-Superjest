{
  "openapi": "3.0.3",
  "info": {
    "title": "Basic Banking System",
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "https://localhost:3000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "transactions",
      "description": "How do you want to transfer your money"
    },
    {
      "name": "accounts",
      "description": "Your Account"
    },
    {
      "name": "users",
      "description": "All about Users"
    },
    {
      "name": "auth",
      "description": "Authentification"
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Creates list of users with given input array",
        "description": "Creates list of users with given input array",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Data ditambahkan!",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Gagal menambah data(input data user dan profile dengan benar)!"
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Returns All Users Data",
        "description": "Returns Users Data Lists",
        "operationId": "get",
        "responses": {
          "200": {
            "description": "Success!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": null,
                  "$ref": "#/components/schemas/Users",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/accounts": {
      "post": {
        "tags": [
          "accounts"
        ],
        "summary": "Creates list of accounts with given input array",
        "description": "Creates list of users with given input array",
        "operationId": "createdata",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Data ditambahkan!",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Gagal menambah data!"
          }
        }
      },
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Returns All Accounts Data",
        "description": "Returns Accounts Data Lists",
        "operationId": "getdata",
        "responses": {
          "200": {
            "description": "Success!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": null,
                  "$ref": "#/components/schemas/BankAccount",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "post": {
        "tags": [
          "transactions"
        ],
        "summary": "Creates list of transaction with given input array",
        "description": "Creates list of transaction with given input array",
        "operationId": "createdata transaction",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Data ditambahkan!",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Gagal menambah data!"
          }
        }
      },
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Returns All Transaction Data",
        "description": "Returns Transaction Data Lists",
        "operationId": "getdata transaction",
        "responses": {
          "200": {
            "description": "Success!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": null,
                  "$ref": "#/components/schemas/Transaction",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get user by id",
        "description": "",
        "operationId": "getById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be fetched. Use 1 for testing. ",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Users"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request! id is required"
          }
        }
      }
    },
    "/accounts/{id}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "Get data account by id",
        "description": "get by id data accounts",
        "operationId": "getById accounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be fetched. Use 1 for testing. ",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccount"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request! id is required"
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "tags": [
          "transactions"
        ],
        "summary": "Get transaction by id",
        "description": "get by id data accounts",
        "operationId": "getById transaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id that needs to be fetched. Use 1 for testing. ",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request! id is required"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "login",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "email for login",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "password",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Berhasil Login!!",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Password Salah!!"
          },
          "404": {
            "description": "Email tidak ditemukan!"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register user into the system",
        "description": "",
        "operationId": "register",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "The user name for register",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "email for register",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for register in clear text",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Berhasil Register!",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Email sudah terdaftar!"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Transaction": {
        "required": [
          "amount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "amount": {
            "type": "number",
            "format": "float",
            "example": 1000000
          },
          "sender": {
            "$ref": "#/components/schemas/BankAccount"
          },
          "receiver": {
            "$ref": "#/components/schemas/BankAccount"
          }
        }
      },
      "BankAccount": {
        "type": "object",
        "required": [
          "account_number",
          "bank_name",
          "balance"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "bank_name": {
            "type": "string",
            "example": "bank tes"
          },
          "account_number": {
            "type": "integer",
            "format": "int64",
            "example": 12321
          },
          "balance": {
            "type": "number",
            "format": "float",
            "example": 1000000
          },
          "user": {
            "$ref": "#/components/schemas/Users"
          }
        }
      },
      "Users": {
        "required": [
          "email",
          "name",
          "password"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "email": {
            "type": "string",
            "example": "kevin@gmail.com"
          },
          "name": {
            "type": "string",
            "example": "kevin"
          },
          "password": {
            "type": "string",
            "example": "password"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          }
        }
      },
      "Profile": {
        "type": "object",
        "required": [
          "identity_number",
          "identity_type",
          "address"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "identity_type": {
            "type": "string",
            "example": "test"
          },
          "identity_number": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "address": {
            "type": "string",
            "example": "jl.rasau"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "requestBodies": {
      "Users": {
        "description": "Pet object that needs to be added to the store",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Users"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/Users"
            }
          }
        }
      }
    }
  }
}